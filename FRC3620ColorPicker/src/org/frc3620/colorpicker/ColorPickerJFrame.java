/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.frc3620.colorpicker;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FileDialog;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author wegscd
 */
public class ColorPickerJFrame extends javax.swing.JFrame {

    BufferedImage image, thresholdedImage;

    /**
     * Creates new form ColorPickerJFrame
     */
    public ColorPickerJFrame() {
        initComponents();
        updateHueSliderNumbers();
        updateSaturationSliderNumbers();
        updateValueSliderNumbers();
        load("captured.bmp");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        myJPanel1 = new org.frc3620.colorpicker.MyJPanel();
        image1 = new org.frc3620.colorpicker.MyImageComponent();
        image2 = new org.frc3620.colorpicker.MyImageComponent();
        bottomPanel = new javax.swing.JPanel();
        formPanel = new javax.swing.JPanel();
        xLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        rLabel = new javax.swing.JLabel();
        gLabel = new javax.swing.JLabel();
        bLabel = new javax.swing.JLabel();
        hLabel = new javax.swing.JLabel();
        sLabel = new javax.swing.JLabel();
        vLabel = new javax.swing.JLabel();
        xField = new javax.swing.JLabel();
        yField = new javax.swing.JLabel();
        rField = new javax.swing.JLabel();
        gField = new javax.swing.JLabel();
        bField = new javax.swing.JLabel();
        hField = new javax.swing.JLabel();
        sField = new javax.swing.JLabel();
        vField = new javax.swing.JLabel();
        hsLabel = new javax.swing.JLabel();
        hueSlider = new org.frc3620.colorpicker.RangeSlider();
        hslField = new javax.swing.JLabel();
        hsuField = new javax.swing.JLabel();
        ssLabel = new javax.swing.JLabel();
        saturationSlider = new org.frc3620.colorpicker.RangeSlider();
        sslField = new javax.swing.JLabel();
        ssuField = new javax.swing.JLabel();
        vsLabel = new javax.swing.JLabel();
        valueSlider = new org.frc3620.colorpicker.RangeSlider();
        vslField = new javax.swing.JLabel();
        vsuField = new javax.swing.JLabel();
        padding = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuFileOpen = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        myJPanel1.setLayout(new javax.swing.BoxLayout(myJPanel1, javax.swing.BoxLayout.LINE_AXIS));

        image1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                image1MouseMoved(evt);
            }
        });
        myJPanel1.add(image1);
        myJPanel1.add(image2);

        jScrollPane1.setViewportView(myJPanel1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.PAGE_START);

        bottomPanel.setMinimumSize(new java.awt.Dimension(364, 196));
        bottomPanel.setLayout(new javax.swing.BoxLayout(bottomPanel, javax.swing.BoxLayout.LINE_AXIS));

        java.awt.GridBagLayout dataPanelLayout = new java.awt.GridBagLayout();
        dataPanelLayout.columnWidths = new int[] {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0};
        dataPanelLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        formPanel.setLayout(dataPanelLayout);

        xLabel.setForeground(new java.awt.Color(51, 51, 51));
        xLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel.setText("X:");
        xLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        xLabel.setMaximumSize(new java.awt.Dimension(11, 14));
        xLabel.setMinimumSize(new java.awt.Dimension(11, 14));
        xLabel.setPreferredSize(new java.awt.Dimension(11, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(xLabel, gridBagConstraints);

        yLabel.setForeground(new java.awt.Color(51, 51, 51));
        yLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        yLabel.setText("Y:");
        yLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        yLabel.setMaximumSize(new java.awt.Dimension(11, 14));
        yLabel.setMinimumSize(new java.awt.Dimension(11, 14));
        yLabel.setPreferredSize(new java.awt.Dimension(11, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(yLabel, gridBagConstraints);

        rLabel.setForeground(new java.awt.Color(51, 51, 51));
        rLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rLabel.setText("R:");
        rLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(rLabel, gridBagConstraints);

        gLabel.setForeground(new java.awt.Color(51, 51, 51));
        gLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gLabel.setText("G:");
        gLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(gLabel, gridBagConstraints);

        bLabel.setForeground(new java.awt.Color(51, 51, 51));
        bLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bLabel.setText("B:");
        bLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bLabel.setMaximumSize(new java.awt.Dimension(11, 14));
        bLabel.setMinimumSize(new java.awt.Dimension(11, 14));
        bLabel.setPreferredSize(new java.awt.Dimension(11, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(bLabel, gridBagConstraints);

        hLabel.setForeground(new java.awt.Color(51, 51, 51));
        hLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hLabel.setText("H:");
        hLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(hLabel, gridBagConstraints);

        sLabel.setForeground(new java.awt.Color(51, 51, 51));
        sLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sLabel.setText("S:");
        sLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        sLabel.setMaximumSize(new java.awt.Dimension(11, 14));
        sLabel.setMinimumSize(new java.awt.Dimension(11, 14));
        sLabel.setPreferredSize(new java.awt.Dimension(11, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(sLabel, gridBagConstraints);

        vLabel.setForeground(new java.awt.Color(51, 51, 51));
        vLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vLabel.setText("V:");
        vLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        vLabel.setMaximumSize(new java.awt.Dimension(11, 14));
        vLabel.setMinimumSize(new java.awt.Dimension(11, 14));
        vLabel.setPreferredSize(new java.awt.Dimension(11, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(vLabel, gridBagConstraints);

        xField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        xField.setMaximumSize(new java.awt.Dimension(30, 14));
        xField.setMinimumSize(new java.awt.Dimension(30, 14));
        xField.setName(""); // NOI18N
        xField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        formPanel.add(xField, gridBagConstraints);

        yField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        yField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        yField.setMaximumSize(new java.awt.Dimension(30, 14));
        yField.setMinimumSize(new java.awt.Dimension(30, 14));
        yField.setName(""); // NOI18N
        yField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        formPanel.add(yField, gridBagConstraints);

        rField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        rField.setMaximumSize(new java.awt.Dimension(30, 14));
        rField.setMinimumSize(new java.awt.Dimension(30, 14));
        rField.setName(""); // NOI18N
        rField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 6;
        formPanel.add(rField, gridBagConstraints);

        gField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gField.setMaximumSize(new java.awt.Dimension(30, 14));
        gField.setMinimumSize(new java.awt.Dimension(30, 14));
        gField.setName(""); // NOI18N
        gField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 6;
        formPanel.add(gField, gridBagConstraints);

        bField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bField.setMaximumSize(new java.awt.Dimension(30, 14));
        bField.setMinimumSize(new java.awt.Dimension(30, 14));
        bField.setName(""); // NOI18N
        bField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 6;
        formPanel.add(bField, gridBagConstraints);

        hField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        hField.setMaximumSize(new java.awt.Dimension(30, 14));
        hField.setMinimumSize(new java.awt.Dimension(30, 14));
        hField.setName(""); // NOI18N
        hField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 8;
        formPanel.add(hField, gridBagConstraints);

        sField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        sField.setMaximumSize(new java.awt.Dimension(30, 14));
        sField.setMinimumSize(new java.awt.Dimension(30, 14));
        sField.setName(""); // NOI18N
        sField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 8;
        formPanel.add(sField, gridBagConstraints);

        vField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        vField.setMaximumSize(new java.awt.Dimension(30, 14));
        vField.setMinimumSize(new java.awt.Dimension(30, 14));
        vField.setName(""); // NOI18N
        vField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 8;
        formPanel.add(vField, gridBagConstraints);

        hsLabel.setForeground(new java.awt.Color(51, 51, 51));
        hsLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hsLabel.setText("H:");
        hsLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(hsLabel, gridBagConstraints);

        hueSlider.setMajorTickSpacing(64);
        hueSlider.setMaximum(255);
        hueSlider.setMinorTickSpacing(16);
        hueSlider.setUpperValue(255);
        hueSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hueSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        formPanel.add(hueSlider, gridBagConstraints);

        hslField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hslField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        hslField.setMaximumSize(new java.awt.Dimension(30, 14));
        hslField.setMinimumSize(new java.awt.Dimension(30, 14));
        hslField.setName(""); // NOI18N
        hslField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 22;
        gridBagConstraints.gridy = 0;
        formPanel.add(hslField, gridBagConstraints);

        hsuField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hsuField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        hsuField.setMaximumSize(new java.awt.Dimension(30, 14));
        hsuField.setMinimumSize(new java.awt.Dimension(30, 14));
        hsuField.setName(""); // NOI18N
        hsuField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 24;
        gridBagConstraints.gridy = 0;
        formPanel.add(hsuField, gridBagConstraints);

        ssLabel.setForeground(new java.awt.Color(51, 51, 51));
        ssLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ssLabel.setText("S:");
        ssLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ssLabel.setMaximumSize(new java.awt.Dimension(11, 14));
        ssLabel.setMinimumSize(new java.awt.Dimension(11, 14));
        ssLabel.setPreferredSize(new java.awt.Dimension(11, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(ssLabel, gridBagConstraints);

        saturationSlider.setMajorTickSpacing(64);
        saturationSlider.setMaximum(255);
        saturationSlider.setMinorTickSpacing(16);
        saturationSlider.setUpperValue(255);
        saturationSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                saturationSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        formPanel.add(saturationSlider, gridBagConstraints);

        sslField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sslField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        sslField.setMaximumSize(new java.awt.Dimension(30, 14));
        sslField.setMinimumSize(new java.awt.Dimension(30, 14));
        sslField.setName(""); // NOI18N
        sslField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 22;
        gridBagConstraints.gridy = 2;
        formPanel.add(sslField, gridBagConstraints);

        ssuField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ssuField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ssuField.setMaximumSize(new java.awt.Dimension(30, 14));
        ssuField.setMinimumSize(new java.awt.Dimension(30, 14));
        ssuField.setName(""); // NOI18N
        ssuField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 24;
        gridBagConstraints.gridy = 2;
        formPanel.add(ssuField, gridBagConstraints);

        vsLabel.setForeground(new java.awt.Color(51, 51, 51));
        vsLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vsLabel.setText("V:");
        vsLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        vsLabel.setMaximumSize(new java.awt.Dimension(11, 14));
        vsLabel.setMinimumSize(new java.awt.Dimension(11, 14));
        vsLabel.setPreferredSize(new java.awt.Dimension(11, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        formPanel.add(vsLabel, gridBagConstraints);

        valueSlider.setMajorTickSpacing(64);
        valueSlider.setMaximum(255);
        valueSlider.setMinorTickSpacing(16);
        valueSlider.setUpperValue(255);
        valueSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                valueSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        formPanel.add(valueSlider, gridBagConstraints);

        vslField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vslField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        vslField.setMaximumSize(new java.awt.Dimension(30, 14));
        vslField.setMinimumSize(new java.awt.Dimension(30, 14));
        vslField.setName(""); // NOI18N
        vslField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 22;
        gridBagConstraints.gridy = 4;
        formPanel.add(vslField, gridBagConstraints);

        vsuField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vsuField.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        vsuField.setMaximumSize(new java.awt.Dimension(30, 14));
        vsuField.setMinimumSize(new java.awt.Dimension(30, 14));
        vsuField.setName(""); // NOI18N
        vsuField.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 24;
        gridBagConstraints.gridy = 4;
        formPanel.add(vsuField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 26;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        formPanel.add(padding, gridBagConstraints);

        bottomPanel.add(formPanel);

        getContentPane().add(bottomPanel, java.awt.BorderLayout.SOUTH);

        jMenu1.setText("File");

        jMenuFileOpen.setText("Open");
        jMenuFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuFileOpen);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileOpenActionPerformed
        FileDialog chooser = new FileDialog(this,
                "Use a .png or .jpg extension", FileDialog.LOAD);
        chooser.setVisible(true);
        if (chooser.getFile() != null) {
            load(chooser.getDirectory() + File.separator + chooser.getFile());
        }
    }//GEN-LAST:event_jMenuFileOpenActionPerformed

    private void hueSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hueSliderStateChanged
        updateHueSliderNumbers();
        generateThresholdedImage();
        image2.repaint();
    }//GEN-LAST:event_hueSliderStateChanged

    private void valueSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_valueSliderStateChanged
        updateValueSliderNumbers();
        generateThresholdedImage();
        image2.repaint();
    }//GEN-LAST:event_valueSliderStateChanged

    private void saturationSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_saturationSliderStateChanged
        updateSaturationSliderNumbers();
        generateThresholdedImage();
        image2.repaint();
    }//GEN-LAST:event_saturationSliderStateChanged

    private void image1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_image1MouseMoved
        rawImageMouseMoved(evt);
    }//GEN-LAST:event_image1MouseMoved

    void updateHueSliderNumbers() {
        hslField.setText(Integer.toString(hueSlider.getValue()));
        hsuField.setText(Integer.toString(hueSlider.getUpperValue()));
    }

    void updateSaturationSliderNumbers() {
        sslField.setText(Integer.toString(saturationSlider.getValue()));
        ssuField.setText(Integer.toString(saturationSlider.getUpperValue()));
    }

    void updateValueSliderNumbers() {
        vslField.setText(Integer.toString(valueSlider.getValue()));
        vsuField.setText(Integer.toString(valueSlider.getUpperValue()));
    }

    void generateThresholdedImage() {
        Map<Integer, Boolean> cache = new HashMap<>();
        long hits = 0, total = 0, t0 = System.currentTimeMillis();
        for (int x = 0; x < image.getWidth(); x++) {
            for (int y = 0; y < image.getHeight(); y++) {
                int pixel = image.getRGB(x, y) & 0xffffff;
                Boolean insideThreshold = cache.get(pixel);
                if (insideThreshold == null) {
                    int r = (pixel & 0xff0000) >> 16;
                    int g = (pixel & 0xff00) >> 8;
                    int b = (pixel & 0xff);
                    float[] hsv = new float[3];
                    Color.RGBtoHSB(r, g, b, hsv);
                    int h = (int) (hsv[0] * 255);
                    int s = (int) (hsv[1] * 255);
                    int v = (int) (hsv[2] * 255);

                    insideThreshold = true;
                    insideThreshold &= (h >= hueSlider.getValue() && h <= hueSlider.getUpperValue());
                    insideThreshold &= (s >= saturationSlider.getValue() && s <= saturationSlider.getUpperValue());
                    insideThreshold &= (v >= valueSlider.getValue() && v <= valueSlider.getUpperValue());
                    cache.put(pixel, insideThreshold);
                } else {
                    hits++;
                }
                total++;

                thresholdedImage.setRGB(x, y, insideThreshold ? 0xff0000 : 0);
            }
        }
        long elapsed = System.currentTimeMillis() - t0;

        System.out.println("hit% = " + (hits * 100.0 / total) + ", elapsed = " + elapsed);
    }

    void rawImageMouseMoved(MouseEvent evt) {
        Point p = evt.getPoint();
        if (image != null) {
            if (p.x >= 0 && p.x < image.getWidth() && p.y >= 0 && p.y < image.getHeight()) {
                int pixel = image.getRGB(p.x, p.y) & 0xffffff;
                int r = (pixel & 0xff0000) >> 16;
                int g = (pixel & 0xff00) >> 8;
                int b = (pixel & 0xff);
                float[] hsv = new float[3];
                Color.RGBtoHSB(r, g, b, hsv);
                int h = (int) (hsv[0] * 255);
                int s = (int) (hsv[1] * 255);
                int v = (int) (hsv[2] * 255);

                xField.setText(Integer.toString(p.x));
                yField.setText(Integer.toString(p.y));
                rField.setText(Integer.toString(r));
                gField.setText(Integer.toString(g));
                bField.setText(Integer.toString(b));
                hField.setText(Integer.toString(h));
                sField.setText(Integer.toString(s));
                vField.setText(Integer.toString(v));
            }
        }
    }

    void load(String filename) {
        try {
            // try to read from file in working directory
            File file = new File(filename);
            if (file.isFile()) {
                image = ImageIO.read(file);

                thresholdedImage = new BufferedImage(image.getWidth(), image.getHeight(), BufferedImage.TYPE_INT_RGB);
                generateThresholdedImage();

                Dimension d = new Dimension(image.getWidth(), image.getHeight());
                Dimension d2x = new Dimension(image.getWidth() * 2 + 16, image.getHeight());
                System.out.println("d = " + d + ", d2x = " + d2x);
                image1.setImage(image);
                image2.setImage(thresholdedImage);
                myJPanel1.revalidate();
                jScrollPane1.repaint();

                pack(); // needed

                setTitle(file.getAbsolutePath() + " " + image.getWidth() + "x" + image.getHeight());
            }
        } catch (IOException ex) {
            throw new RuntimeException("Could not open file: " + filename);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ColorPickerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ColorPickerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ColorPickerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ColorPickerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ColorPickerJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bField;
    private javax.swing.JLabel bLabel;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JPanel formPanel;
    private javax.swing.JLabel gField;
    private javax.swing.JLabel gLabel;
    private javax.swing.JLabel hField;
    private javax.swing.JLabel hLabel;
    private javax.swing.JLabel hsLabel;
    private javax.swing.JLabel hslField;
    private javax.swing.JLabel hsuField;
    private org.frc3620.colorpicker.RangeSlider hueSlider;
    private org.frc3620.colorpicker.MyImageComponent image1;
    private org.frc3620.colorpicker.MyImageComponent image2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuFileOpen;
    private javax.swing.JScrollPane jScrollPane1;
    private org.frc3620.colorpicker.MyJPanel myJPanel1;
    private javax.swing.JLabel padding;
    private javax.swing.JLabel rField;
    private javax.swing.JLabel rLabel;
    private javax.swing.JLabel sField;
    private javax.swing.JLabel sLabel;
    private org.frc3620.colorpicker.RangeSlider saturationSlider;
    private javax.swing.JLabel ssLabel;
    private javax.swing.JLabel sslField;
    private javax.swing.JLabel ssuField;
    private javax.swing.JLabel vField;
    private javax.swing.JLabel vLabel;
    private org.frc3620.colorpicker.RangeSlider valueSlider;
    private javax.swing.JLabel vsLabel;
    private javax.swing.JLabel vslField;
    private javax.swing.JLabel vsuField;
    private javax.swing.JLabel xField;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel yField;
    private javax.swing.JLabel yLabel;
    // End of variables declaration//GEN-END:variables
}
